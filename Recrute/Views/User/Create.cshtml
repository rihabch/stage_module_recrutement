@model Recrute.Models.User

@{
    ViewBag.Title = "Créer un compte";
}

<h2>Créer un nouveau compte</h2>

<section class="login">
@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

  <fieldset>
        <legend>Utilisateur</legend>


    <table border="1">
    <tr>
        <th>
           @Html.LabelFor(m => m.userFirstName)
        </th>
        <td>
            @Html.EditorFor(m => m.userFirstName)
             @Html.ValidationMessageFor(model => model.userFirstName)
         </td>
    </tr>
    <tr>
         <th>
            @Html.LabelFor(m => m.userName)
        </th>
        <td>
            @Html.EditorFor(m => m.userName)
             @Html.ValidationMessageFor(model => model.userName)
        </td>
    </tr>
    <tr>
         <th>
            @Html.LabelFor(m => m.email)
        </th>
        <td>
            @Html.EditorFor(m => m.email)
            @Html.ValidationMessageFor(model => model.email)
        </td>
    </tr>
    <tr>
        <th>
            @Html.LabelFor(m => m.password)
        </th>
        <td>
            @Html.PasswordFor(m => m.password)
            @Html.ValidationMessageFor(model => model.password)
        </td>
    </tr>
    <tr>
        <th>
            @Html.LabelFor(m => m.DateOfBirth)
        </th>
        <td>
            @(Html.Kendo().DatePickerFor(m => m.DateOfBirth)
                    .Name("DateOfBirth")
                    .HtmlAttributes(new { style = "width:170px" })
                    .Min(new DateTime(1900, 1, 1)) //Set min date of the datepicker
                    .Max(DateTime.Today) //Set min date of the datepicker
                    .Value(DateTime.Today) //Set the value of the datepicker
                    //.Events(e => e.Change("datepicker_change"))
                )
             @Html.ValidationMessageFor(model => model.DateOfBirth)
               
        </td>
    </tr>
    <tr>
        <th>
            @Html.LabelFor(m => m.placeOfBirth)
        </th>
        <td>
            @Html.EditorFor(m => m.placeOfBirth)
            @Html.ValidationMessageFor(model => model.placeOfBirth)
        </td>
    </tr>
     <tr>
        <th>
            @Html.LabelFor(m => m.nationality)
        </th>
        <td>
            @Html.EditorFor(m => m.nationality)
            @Html.ValidationMessageFor(model => model.nationality)
        </td>
    </tr>
    <tr>
        <th>
             @Html.LabelFor(m => m.famSituation)
        </th>
        <td>
            @(Html.Kendo().AutoComplete()
                     .Name("famSituation")
                     .Filter("startswith")
                     .Placeholder("Choisir une situation familiale...")
                     .BindTo(new string[] {
                            "Célibataire",
                            "Marié(e)",
                            "Divorcé(e)",
                            "Veuf(ve)",
                     })
                     .HtmlAttributes(new { style = "width:170px" })
                )
             @Html.ValidationMessageFor(model => model.famSituation)
        </td>
    </tr>
    <tr>
        <th>
            @Html.LabelFor(m => m.gsmNum)
        </th>
        <td>
            @Html.EditorFor(m => m.gsmNum)
            @Html.ValidationMessageFor(model => model.gsmNum)
        </td>
    </tr>
    <tr>
        <th>
            @Html.LabelFor(m => m.phoneNum)
        </th>
        <td>
            @Html.EditorFor(m => m.phoneNum)
            @Html.ValidationMessageFor(model => model.phoneNum)
        </td>
    </tr>
    <tr>
        <th>
            @Html.LabelFor(m => m.adress)
        </th>
        <td>
            @Html.EditorFor(m => m.adress)
            @Html.ValidationMessageFor(model => model.adress)
        </td>
    </tr>
     <tr>
        <th>
            @Html.LabelFor(m => m.country)
        </th>
        <td>
            @Html.EditorFor(m => m.country)
            @Html.ValidationMessageFor(model => model.country)
        </td>
    </tr>
    <tr>
        <th>
            @Html.LabelFor(m => m.city)
        </th>
        <td>
            @Html.EditorFor(m => m.city)
            @Html.ValidationMessageFor(model => model.city)
        </td>
    </tr>
    <tr>
        <th>
            @Html.LabelFor(m => m.codePoste)
        </th>
        <td>
           @Html.EditorFor(m => m.codePoste)
           @Html.ValidationMessageFor(model => model.codePoste)
        </td>
    </tr>

    </table>

       <p>
            <input type="submit" value="Enregistrer" class="k-button" />
        </p>
    </fieldset>

        
}

    </section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}